# Metrics Server Configuration for EKS
# Metrics Server thu thập metrics về CPU và memory usage từ nodes và pods

# Global configuration
global:
  imageRegistry: ""

# Image configuration
image:
  repository: bitnami/metrics-server
  tag: 0.7.1
  pullPolicy: IfNotPresent

# Replica count
replicas: 2

# Service configuration
service:
  type: ClusterIP
  port: 443
  targetPort: 4443

# Resource limits
resources:
  requests:
    cpu: 100m
    memory: 200Mi
  limits:
    cpu: 200m
    memory: 400Mi

# Node selector
nodeSelector:
  kubernetes.io/os: linux

# Tolerations for spot instances
tolerations:
  - key: "eks.amazonaws.com/capacityType"
    operator: "Equal"
    value: "SPOT"
    effect: "NoSchedule"

# Pod security context
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

# Security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Arguments for EKS compatibility
args:
  - --kubelet-insecure-tls
  - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  - --cert-dir=/tmp
  - --secure-port=4443
  - --kubelet-use-node-status-port
  - --metric-resolution=15s

# Service account
serviceAccount:
  create: true
  name: metrics-server
  annotations: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Horizontal Pod Autoscaler
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 50
  targetMemoryUtilizationPercentage: 50

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# API service configuration
apiService:
  create: true

# Service monitor for Prometheus (disabled until Prometheus is installed)
serviceMonitor:
  enabled: false
  namespace: ""
  interval: 30s
  scrapeTimeout: 10s
